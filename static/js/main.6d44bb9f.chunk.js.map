{"version":3,"sources":["components/Search.js","components/Sort.js","components/Control.js","components/Form.js","components/TaskItem.js","components/TaskList.js","App.js","reportWebVitals.js","index.js"],"names":["Search","props","onSearch","state","keyword","trim","toLowerCase","onChange","e","target","name","value","setState","className","type","this","placeholder","onClick","Component","Sort","sortBy","sort","by","data-toggle","aria-haspopup","aria-expanded","role","Control","style","padding","Form","onSubmit","preventDefault","resetForm","status","taskEdit","console","log","nextProps","aria-label","onHiden","aria-hidden","color","htmlFor","id","disabled","TaskItem","onUpdateStatus","task","statusHandle","info","active","title","class","hiden","complete","cursor","onDelete","onUpdate","index","scope","marginRight","TaskList","filterName","filterStatus","elems","tasks","map","indexOf","App","onToggleForm","taskIsEditingIndex","isDisplayForm","params","makeid","push","localStorage","setItem","JSON","stringify","onCloseForm","onShowForm","findIndex","splice","t","getItem","parse","message","length","result","characters","charactersLength","i","charAt","Math","floor","random","elementForm","filter","a","b","marginTop","transition","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6d44bb9f.chunk.js","sourcesContent":["import React, { Component} from 'react';\n\nclass Search extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      keyword: \"\"\n    };\n  }\n\n  onSearch = () => {\n    if (this.state.keyword.trim() !== '') {\n      this.props.onSearch(this.state.keyword.trim().toLowerCase());\n    }\n  }\n\n  onChange = (e) => {\n    var target = e.target;\n    var name = target.name;\n    var value = target.value;\n\n    this.setState({\n      [name]: value\n    });\n  }\n\n  render() {\n      \n    return (\n      <div className=\"col-sm-6 col-md-6 col-lg-6 col-xl-6\">\n        <div className=\"input-group mb-3\">\n          <input type=\"text\" name=\"keyword\"\n            className=\"form-control border border-primary\"\n            onChange = { this.onChange }\n            placeholder=\"Search\"/>\n          <div className=\"input-group-append\">\n            <button className=\"btn btn-primary\" type=\"submit\"\n              onClick={this.onSearch }\n            >Search</button>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Search;\n","import React, { Component} from 'react';\n\nclass Sort extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      sort: {\n        by: 'name',\n        value: 1\n      }\n    };\n  }\n  \n  sortBy = (sortBy, value) => {\n  \n    var sort = {by: sortBy, value: value};\n    this.setState({\n      sort:sort\n    });\n\n    this.props.sortBy(sortBy, value);\n  }\n\n  render() {\n    var {sort} = this.state;\n\n    return (\n      <div className=\"col-sm-6 col-md-6 col-lg-6 col-xl-6\">\n        <div className=\"btn-group\">\n          <button type=\"button\" className=\"btn btn-info dropdown-toggle\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\n            Sort\n            {/* <i className=\"far fa-caret-square-down\"></i> */}\n          </button>\n          <div className=\"dropdown-menu\">\n            <a role=\"button\" className={(sort.by ==='name'&& sort.value ===1)? \"dropdown-item sort-selected\": \"dropdown-item\"} \n              onClick={ () => this.sortBy(\"name\", 1)}\n            >\n              <i className=\"sort-icon fas fa-sort-alpha-down\"></i> A - Z\n            </a>\n            <a role=\"button\" className={(sort.by ==='name'&& sort.value ===-1)? \"dropdown-item sort-selected\": \"dropdown-item\"} \n              onClick={ () => this.sortBy(\"name\", -1)}\n            >\n              <i className=\"sort-icon fas fa-sort-alpha-down-alt\"></i>  Z - A\n            </a>\n            <div className=\"dropdown-divider\"></div>\n            <a role=\"button\"className={(sort.by ==='status'&& sort.value ===1)? \"dropdown-item sort-selected\": \"dropdown-item\"} \n              onClick={ () => this.sortBy(\"status\", 1)}\n            >Active</a>\n            <a role=\"button\" className={(sort.by ==='status'&& sort.value ===-1)? \"dropdown-item sort-selected\": \"dropdown-item\"} \n              onClick={ () => this.sortBy(\"status\", -1)}\n            >Hidden</a>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Sort;\n","import React, { Component} from 'react';\nimport Search from './Search';\nimport Sort from './Sort';\nclass Control extends Component {\n\n  render() {\n      \n    return (\n      <div className=\"row\" style={{ padding: \"10px 0\"}}>\n        {/*Serch*/}\n        <Search onSearch ={ this.props.onSearch }/>\n        {/*Sort*/}\n        <Sort sortBy = { this.props.sortBy }/>\n      </div>\n    );\n  }\n}\n\nexport default Control;\n","import React, { Component} from 'react';\n\nclass Form extends Component {\n\n\n  constructor(props) {\n\n    super(props);\n    \n    this.state={\n      name:\"\",\n      status: \"active\"\n    \n    };\n    \n  }\n  \n  componentDidMount() {\n    var {taskEdit} = this.props;\n    if (taskEdit) {\n      console.log(\"edit\");\n      this.setState({ \n        name: taskEdit.name,\n        status: taskEdit.status\n      });\n    }\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (!nextProps) {\n      return;\n    }\n\n    var taskEdit = nextProps.taskEdit;\n    if (taskEdit) {\n      console.log(\"edit\", taskEdit);\n      this.setState({ \n        name: taskEdit.name,\n        status: taskEdit.status\n      });\n    }  else {\n      this.setState({ \n        name: '',\n        status: 'active'\n      });\n    }\n  }\n\n  onChange = (e) => {\n    var target = e.target;\n    var name = target.name;\n    var value = target.value;\n\n    this.setState({\n      [name]: value\n    });\n\n  }\n  onSubmit = (e) => {\n    e.preventDefault();\n    if(this.state.name ==='') {\n      return;\n    }\n    this.props.onSubmit(this.state);\n    this.resetForm();\n  }\n  resetForm = () => {\n    this.setState({\n      name:'', \n      status:'active'\n    });\n  }\n\n  render() {\n    \n    return (\n    <div className=\"card\">\n      <div className=\"card-header bg-info\">{ this.props.taskEdit ? \"Update task\": \"Create new task\"}\n      <button type=\"button\" className=\"close\" aria-label=\"Close\"\n        onClick={ this.props.onHiden }\n      >\n          <span aria-hidden=\"true\" style={{ color: \"white\"}}>&times;</span>\n      </button>\n      </div>\n      <div className=\"card-body\">\n          <form onSubmit={ this.onSubmit }>\n            <div className=\"form-group\">\n              <label htmlFor=\"name\">Name</label>\n              <input type=\"text\" name=\"name\"\n                className=\"form-control\" id=\"name\"\n                value={ this.state.name }\n                onChange={ this.onChange }\n                />\n            </div>\n            <div className=\"form-group\">\n              <label htmlFor=\"status\">Status</label>\n              <select className=\"form-control\" \n                name=\"status\"id=\"status\"\n                value={this.state.status }\n                onChange={ this.onChange }\n                >\n                <option value=\"active\">Active</option>\n                <option value=\"hiden\">Hiden</option>\n                <option value=\"complete\">Complele</option>\n              </select>\n            </div>\n            <div className=\"card-footer\">\n              <button disabled={ this.state.name ===''} type=\"submit\" className=\"btn btn-primary mr-2\">Save</button>\n              <button\n                  type=\"reset\" \n                  className=\"btn btn-info mr-2\"\n                  onClick={ this.resetForm }\n                  >Reset</button>\n                  \n            </div>\n          </form>\n      </div>\n    </div>\n     \n    );\n  }\n}\n\nexport default Form;\n","import React, { Component} from  'react';\n\nclass TaskItem extends Component {\n\n  onUpdateStatus = () => {\n    this.props.onUpdateStatus(this.props.task.id);\n  }\n\n  statusHandle =(status) => {\n    let trust = {\n      active:{title:\"Active\", class:\"badge badge-info\"}, \n      hiden:{title:\"Hiden\", class:\"badge badge-danger\"},\n      complete:{title:\"Completed\", class:\"badge badge-success\"},\n     \n    }\n    let info = trust[status];\n    \n    return <span\n      style = {{cursor: \"pointer\"}} \n      onClick={ this.onUpdateStatus } \n      className={info.class}>{ info.title }</span>\n    \n  }\n  onDelete = () => {\n    this.props.onDelete(this.props.task.id);\n  }\n  onUpdate = () => {\n    this.props.onUpdate(this.props.task.id);\n  }\n\n  render() {\n    var {task, index} = this.props;\n\n    return (\n\n      <tr className=\"d-flex\">\n          <td className=\"col-1\" scope=\"row\">{index + 1}</td>\n          <td className=\"col-7\">{ task.name }</td>\n          <td className=\"col-2\">\n            {this.statusHandle(task.status)}\n          </td>\n          <td className=\"col-2\">\n            <button className=\"btn-ed btn btn-warning \"\n              style={{marginRight:\"5px\"}}\n              onClick={ this.onUpdate }\n            >\n            <i className=\"far fa-edit\"></i> Edit\n            </button>\n            <button \n              onClick={ this.onDelete }\n              className=\"btn-ed btn btn-danger\">\n              <i className=\"far fa-trash-alt\"></i> DeLete\n            </button>\n          </td>\n      </tr>\n    );\n  }\n}\n\nexport default TaskItem;","import React, { Component} from  'react';\nimport TaskItem from './TaskItem';\n\nclass TaskList extends Component {\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      filterName : '',\n      filterStatus  : \"all\"\n    };\n  }\n  \n  onChange = (e) => {\n    var target = e.target;\n    var name = target.name;\n    var value = target.value;\n\n    this.setState({\n      [name]: value\n    });\n\n  }\n\n  render() {\n    var {tasks} = this.props;\n    \n   \n    var elems = tasks.map((task, index) => {\n      var rs = '';\n      var {filterStatus, filterName} = this.state;\n\n      if (filterStatus === \"all\" || filterStatus === task.status) {\n        if (filterName === '' || task.name.toLowerCase().indexOf(filterName.toLowerCase().trim()) !== -1 ) {\n          return <TaskItem key={task.id} \n            task={task} index={index}\n            onDelete = { this.props.onDelete }\n            onUpdate = { this.props.onUpdate }\n            onUpdateStatus={ this.props.onUpdateStatus }/>\n        }\n        \n      } \n      \n      return rs;\n\n    });\n\n    return (\n      <table className=\"table table-bordered table-hover\">\n        <thead>\n          <tr className=\"d-flex\">\n            <th className=\"col-1\">Index</th>\n            <th className=\"col-7\">Name</th>\n            <th className=\"col-2\">Status</th>\n            <th className=\"col-2 col-sm-4\">Action</th>\n          </tr>\n        </thead>\n        <tbody>\n          <tr className=\"d-flex\">\n            <td className=\"col-1\"scope=\"row\"></td>\n            <td className=\"col-7\">\n                <input\n                  type=\"text\" className=\"form-control\"\n                  name=\"filterName\"\n                  onChange = { this.onChange }\n                />\n            </td>\n            <td className=\"col-2\">\n              <select className=\"form-control\"\n                name=\"filterStatus\"\n                onChange = { this.onChange }\n              >\n                <option value=\"all\">All</option>\n                <option value =\"active\">Active</option>\n                <option value=\"hiden\">Hiden</option>\n                <option value=\"complete\">Completed</option>\n              </select>\n            </td>\n            <td className=\"col-2\"></td>\n          </tr>\n          {elems}\n        </tbody>\n      </table>\n    );\n  }\n}\n\nexport default TaskList;","import React, { Component} from 'react';\n\nimport './App.css';\nimport Control from './components/Control';\nimport Form from './components/Form';\nimport TaskList from './components/TaskList';\nimport { findIndex, filter } from 'lodash';\n\nclass App extends Component {\n  \n  constructor(props) {\n    super(props);\n    this.state={\n      tasks:[],\n      isDisplayForm: false,\n      taskIsEditingIndex: -1,\n      keyword:\"\",\n      sort : {\n        by: \"name\",\n        value: 1\n      }\n    };\n    \n  }\n  \n  componentDidMount() {\n    try {\n      var t = localStorage.getItem('tasks');\n      this.setState({tasks: JSON.parse(t)});\n      \n    } catch (e) {\n      console.log(e.message);\n    }\n  }\n  \n \n  makeid(length = 5) {\n    var result           = '';\n    var characters       = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n    var charactersLength = characters.length;\n    for ( var i = 0; i < length; i++ ) {\n       result += characters.charAt(Math.floor(Math.random() * charactersLength));\n    }\n    return result;\n  }\n\n  \n  onToggleForm = () => {\n    if (this.state.taskIsEditingIndex !== -1) {\n      this.setState({ taskIsEditingIndex: -1});\n      return;\n    }\n    this.setState({ isDisplayForm: !this.state.isDisplayForm });\n  }\n\n  onSubmit = (params) => {\n    var {tasks, taskIsEditingIndex} = this.state;\n    // Update\n    if(taskIsEditingIndex !== -1) {\n      tasks[taskIsEditingIndex].name = params.name;\n      tasks[taskIsEditingIndex].status = params.status;\n      this.setState({ taskIsEditingIndex: -1});\n    } else {\n      // Create \n      params.id = this.makeid(5);\n      tasks.push(params);\n    }\n    \n    this.setState({\n      tasks: tasks\n    });\n    localStorage.setItem(\"tasks\", JSON.stringify(tasks));\n  }\n\n  onCloseForm = () => {\n    this.setState({\n      isDisplayForm: false,\n      taskIsEditingIndex: -1\n    });\n  }\n\n  onShowForm = () => {\n    this.setState({\n      isDisplayForm: true,\n    });\n  }\n\n  onUpdateStatus = (id) => {\n    var index = findIndex(this.state.tasks, (task)=> {\n      return task.id === id\n    });\n    console.log(\"found\", index);\n    if (index === -1) {\n      return \n    }\n    var {tasks} = this.state;\n    console.log(tasks[index].status);\n    if (tasks[index].status === \"hiden\") {\n      tasks[index].status = \"active\";\n    } else if (tasks[index].status === \"active\") {\n      tasks[index].status = \"complete\";\n    } else {\n      tasks[index].status = \"hiden\";\n    }\n    \n    this.setState({ tasks: tasks});\n    localStorage.setItem(\"tasks\", JSON.stringify(tasks));\n  }\n\n  onDelete = (id) => {\n    console.log(id);\n    var index = this.findIndex(id);\n    if (index === -1) {\n      return ;\n    }\n    var { tasks } = this.state;\n    console.log(index, tasks);\n\n    tasks.splice(index, 1);\n    this.setState({tasks: tasks});\n    localStorage.setItem(\"tasks\", JSON.stringify(tasks));\n    this.onCloseForm();\n  }\n  \n  onUpdate = (id) => {\n    var index = findIndex(this.state.tasks, (task)=> {\n      return task.id === id\n    });\n    if(index === -1) {\n      return;\n    }\n    this.setState({ taskIsEditingIndex: index });   \n    this.onShowForm();\n  }\n\n\n  // findIndex = (id) => {\n  //   var {tasks} = this.state;\n  //   // for (let i= 0; i < tasks.length; i++) {\n  //   //   if (tasks[i].id === id) return i; \n  //   // }\n  //   // return -1;\n  //   return \n  // }\n\n  onSearch = (keyword) => {\n    this.setState({ keyword: keyword});\n  }\n   \n  // resultFilter = (task) => {\n  //   if (this.state.keyword ==='') {\n  //     return true;\n  //   }\n  //   return task.name.trim().toLowerCase().indexOf(this.state.keyword) !==-1;\n  // }\n\n  sortBy = (sortBy, value) => {\n    \n    var sort = { by: sortBy, value: value };\n\n    this.setState( {\n      sort: sort\n    });\n\n  }\n\n  render() {\n    var {tasks, isDisplayForm, taskIsEditingIndex, sort, keyword } = this.state;\n    var elementForm =  isDisplayForm ? <Form\n      onHiden={this.onCloseForm }\n      onSubmit= {this.onSubmit }\n      taskEdit = {taskIsEditingIndex !== -1? this.state.tasks[taskIsEditingIndex]: null}\n      /> : '';\n    \n    // tasks = tasks.filter(this.resultFilter);\n    tasks = filter(tasks, (task) => {\n      return task.name.toLowerCase().indexOf(keyword) !== -1\n    });\n    tasks = tasks.sort((a, b) => {\n      if (a[sort.by] == b[sort.by]) {\n        return 0;\n      } \n      return (a[sort.by].toLowerCase() > b[sort.by].toLowerCase()) ? sort.value: -sort.value;\n    });\n  \n    return (\n      <div className=\"container-fluid\" style={{marginTop:\"20px\"}}>\n        <div className=\"row\">\n          <div className={ isDisplayForm ? \"col-sm-4 col-md-4 col-lg-4 col-xl-4\":\"w-0\" }\n            style ={{ transition:\"all 1s\"}}\n          >\n            { elementForm }\n          </div>\n          <div className={ isDisplayForm ? \"col-sm-8 col-md-8 col-lg-8 col-xl-8\" : \n                                        \"col-sm-12 col-md-12 col-lg-12 col-xl-12\"}\n            // style ={{transition: \"all 1s\"}}\n                                        \n            >\n              <button \n              \n                className=\"btn btn-primary  mr-5\"\n                onClick={this.onToggleForm }\n                \n                >\n                <span className=\"fa fa-plus\"></span>Add new task\n              </button>\n             \n              <Control onSearch ={ this.onSearch } sortBy={ this.sortBy }/>\n\n              <TaskList tasks = {tasks} \n                onUpdate = { this.onUpdate }\n                onDelete={ this.onDelete }\n                onUpdateStatus={ this.onUpdateStatus } />\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}